.TH XCATLOCK 1 2023-05-29

.SH NAME
xcatlock \- protect keyboard from cat

.SH SYNOPSIS

.BR xcatlock
[\fB\,-test\/\fR]
[\fB\,-tiny\/\fR]
[\fB\,-verbose\/\fR]
.I passphrase

.SH DESCRIPTION

XCatLock is an X11 program that grabs all keyboard and mouse input, and only 
ungrabs it after a correct passphrase (specified as argument) is entered. It 
is different from a screen locker in that it leaves the screen visible and 
only prevents key and mouse presses from going to other applications.

The use case is being able to keep looking at the screen while a cat is 
walking or sitting on the keyboard. That's the reason for the name.

.SH OPTIONS
.TP
.B -test
If this option is set, the program will exit as soon as any mouse button
is pressed. This is useful for testing a passphrase while having an easy
method to exit the program if something went wrong.

The lock icon will appear grey to indicate testing mode.
.TP
.B -tiny
Causes the created window to be as small as possible (1x1 pixel) and
undecorated, making it almost invisible.
.TP
.B -verbose
Causes the program to print a lot of output about received events and 
program state to standard output. Only useful for debugging.

.SH NOTES
.TP
.B Do not use your password as the passphrase.
Besides the fact that all commands entered in a shell are usually stored in
plain-text in a history file, that would also be a bad idea because this
program takes no precautions to keep the passphrase safe, and because there
is no limit on incorrect \(dqattempts\(dq or keypresses.

XCatLock unlocking with a given passphrase instead of the user's password
is intentional.
Many systems have a limit set on incorrect password attempts, after which
the account gets temporarily locked. A cat walking or sitting on the keyboard
can generate many incorrect attempts if it happens to touch the Enter key.

.TP
.B XCatLock will not work with Wayland.
It probably will open, but since Wayland isolates all X11 applications into an
XWayland server, it will not be able to grab
.I all
the keyboard and mouse input.

.TP
.B XCatLock can't stop key combinations handled by the kernel.
On Linux, switching to another framebuffer using
.I Ctrl+Alt+F<num>
is still possible, as is the use of
.IR Alt+SysRq .
This is because these key combinations are handled directly by the Linux
kernel.
XCatLock grabbing and intercepting all X11 keyboard events does not stop the
kernel from reacting to the key combination in its own way.
See this link for more detailed explanation of what happens when
.I Ctrl+Alt+F<num>
is pressed:
https://unix.stackexchange.com/questions/63688/what-happens-when-ctrl-alt-fnum-is-pressed/63700#63700

.TP
.B If using Unicode characters, first test the passphrase with -test.
XCatLock uses XIM for processing keyboard input, and in principle supports
UTF8.
The author of the program has successfully tested it with German and Russian
keyboard layouts on FCITX.
However, when using FCITX Hangul layout, instead of Korean characters it reads
English characters.
Many more input methods and layouts haven't been tested at all.
So, to avoid the inconvenience of having to close a program that grabs all
keyboard input, if using a keyboard layout or passphrase with Unicode
characters, first test it with -test.
